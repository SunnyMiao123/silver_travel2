"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault").default;

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.createStyles = createStyles;

var _slicedToArray2 = _interopRequireDefault(require("@babel/runtime/helpers/slicedToArray"));

var _typeof2 = _interopRequireDefault(require("@babel/runtime/helpers/typeof"));

var _objectSpread2 = _interopRequireDefault(require("@babel/runtime/helpers/objectSpread2"));

var _objectWithoutProperties2 = _interopRequireDefault(require("@babel/runtime/helpers/objectWithoutProperties"));

var _css = require("@emotion/css");

var _react = require("react");

var _hooks = require("../hooks");

var _stylish = require("../stylish");

var _excluded = ["stylish"];

/**
 * 业务应用中创建样式基础写法
 */
function createStyles(cssStyleOrGetCssStyleFn) {
  return function (props) {
    var antdToken = (0, _hooks.useAntdToken)();
    var internalStylish = (0, _stylish.useInternalStylish)();
    var theme = (0, _hooks.useTheme)();
    return (0, _react.useMemo)(function () {
      var styles;

      if (typeof cssStyleOrGetCssStyleFn === 'function') {
        var stylish = theme.stylish,
            fullToken = (0, _objectWithoutProperties2.default)(theme, _excluded); // @ts-ignore

        styles = cssStyleOrGetCssStyleFn({
          token: (0, _objectSpread2.default)((0, _objectSpread2.default)({}, antdToken), fullToken),
          stylish: (0, _objectSpread2.default)((0, _objectSpread2.default)({}, internalStylish), stylish)
        }, props);
      } else {
        // @ts-ignore
        styles = cssStyleOrGetCssStyleFn;
      }

      if ((0, _typeof2.default)(styles) === 'object') {
        styles = Object.fromEntries(Object.entries(styles).map(function (_ref) {
          var _ref2 = (0, _slicedToArray2.default)(_ref, 2),
              key = _ref2[0],
              value = _ref2[1];

          if ((0, _typeof2.default)(value) === 'object') {
            return [key, (0, _css.css)(value)];
          }

          return [key, value];
        }));
      } // 处理


      return {
        styles: styles,
        cx: _css.cx,
        theme: theme
      };
    }, [antdToken, theme, props]);
  };
}